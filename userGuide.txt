CutsEditor V0.9 for Apple Mac

The purpose of this program is to enable editing of cut marks and
bookmarks on Beyonwiz Tx PVRs.

Caveat Emptor

Developed on Mac OS Sierra, with Xcode 8.1 and Swift 3 with no thought to
compatibility to earlier versions.  The program uses the Apple provided
AVPlayer for its video interface.  This player does choke on slightly corrupt
recordings.  When it encounters something imperfect, it appears to read the
entire recording on across the network.  It show the "spinning beachball" when
this happens.  Sometimes you can then continue, sometime you will have to kill
the program.   I have yet to hear of anyway of trapping and recovering from
this condition.  My experience has been that this is about 1 recording in 20.
Just enough to be a nuisance.

Primary Usage

1. Select a file or directory to work with.  A single file can be chosen using
File/Open, the more expected usage is to work with all the files below a selected
directory.  When a directory is selected, all the files in and below the
directory are collected into a list.  Directories called ".Trash" are excluded
from the search.

2. The first recording is opened and the video is positioned at first bookmark
or the beginning of the recording.  Some of the details of the recording from
"eit" and "meta" file are displayed along with the current contents of the
cuts file.

3. Buttons on the right hand side allow skipping back and forth through the
recording to position IN and OUT cut marks.  The duration of the skip buttons
can be changed in the user preferences if the defaults do not suit.

4. Changing to another recording triggers the saving of the changes to the cuts
file.  By default the changes to the cuts file are "autowrite".  This
characteristic can be changed in the Preferences/General panel if the user prefers
prompting when changes are made permanent.  A recording can be selected using the
Prev/Next buttons or scroll through the list.

5. The list of recordings is colour coded.   The coding is Green for a recording
that looks to have been edited and contains bookmarks.  Red for a recording that
looks unedited (3 or less bookmarks).  Dark Blue Bold for a recording that contains
IN and OUT marks and Lighter Blue Bold if it only contains an IN or an OUT mark
(typically a "problem" recording in which the seek does not work fully
- my experience in Sydney is that about 5% of the files are unusable on the Mac).
Working out the colour coding is fiddly and involves opening  every cuts file.
As such, it is done as a background task, thus initially the recording list is
black and white.  A progress bar above the program list shows how far through the
task it is.  It does not interfere with starting the editing process.  (As an
indication a T4 with 750 recordings across a wired network takes about 40 secs
elapse time to setup the colour coding of the recording list)

Additional Features

Clear Marks:  Adding and removing of "marks" is supported. To remove marks on bulk,
use the Marks menu.  To remove individual marks, click on the mark in the table
and swipe left on the track pad.

Add Bookmarks: A button labelled "10%" will add bookmarks with a 10% time gap between
them. Note that if IN or OUT marks are present, then the time gap is calculated based
on the IN / OUT boundaries.  This is to simulate the DP series 10 % skip option.
Note that this "Adds" bookmarks into the existing list of bookmarks, so clearing
bookmarks before creates a clean result.  Additionally the Marks menu provides a
utility for adding bookmarks at either fixed time intervals or more at other
that 10% time gap.  The number of marks and the time interval is configured
under Preferences/General.

Advanced Features

Remote "Cutting"

A "Cut" button is present on the dialog.  This relies on the user knowing
sufficient about the PVR to ensure that the Preferences / General setup for
PVR matches their system.  In essence, when the cut button is clicked, program
builds a complete command line for the "Execute Cuts" plugin and invokes it
through an ssh command on the PVR.  This is done as a detached task which then
blocks waiting for the result ensuring only one cut is done at a time.  Since this
is a detached task, the user may continue editing another set of cuts whilst this
is going on.  The program maintains a serial queue of jobs, so multiple "Cut"
commands can be safely issued.  When a job is completed, the next job is started.
It is mportant to realise that, unlike the using "Execute cuts"  plugin, the queue
is held on the Mac, NOT the PVR, so the Mac need to be left running (and awake)
until all the jobs are completed.  Note that the configuration has the local and
remote root paths for a recording.  The programs see and works with the local
(mounted) path.  When the cut job command is built, it replaces the local root
with the remote path to ensure that mcut on the PVR sees the appropriate local
path name for the recording.

A "Job Management" window from the Main Menu provide a means of monitoring the
cutting jobs.  A job in a "waiting" state can be cancelled.  The button is enabled
if the associated job is currently waiting in the queue.

Local Cutting.

Since a chunk of the time spent writing this was spent in a coffee shop in Manly,
I needed a means of testing,  I found Anders Holst mcut program on GitHub that
is part of the plugin.  It is straightforward C.  A handful of tweaks for type
adapting to Xcode and some byte swapping functions provided a means of using
the Mac to the run the same cut job that runs on the Beyonwiz.  It also turned
out to be handy for working directly with recordings moved off onto a NAS disk.
The macified version of the mcut program is not provided as part of this program.
I am not sure of the etiquette of publishing "not my own work", so I leave
building a local mcut as an exercise for the student for now for those who
are interested.

Multiple PVR's

Although I only have one Tx Series box, I realise that multiple PVR's is not
uncommon.  The Preferences / General enables multiple PVR's.  I am "assuming"
that the mounted disks show up differently.  The decision on which unit to SSH
to is based on comparing the root of the path of a recording with the "remote
mount" path in the  pvr configurations.  The remote login field determines
which Beyonwiz the job is ssh'ed to.
Apologies that some of the configuration items that ought to be global
(mcut command args) are on a per PVR basis

User Preferences

General Preferences

The Mark Style option determine if the Marks / Insert show either fixed number
of bookmarks or spacing of bookmarks.

PVR config as described above.  The mcut program options are the same as those
on the PVR.  The application prompts for new names, etc when it builds the
command line.  From observation the mcut program updates the meta file, but
not the eit when title and description are changed.

Skips / Player Preferences

This allow you to set the skipping buttons to your own time/text preferences.
There is only nominal "is it really a number" checking done here, it simply
associates the string you see on the button with a number of seconds.

The player preferences are a little more interesting.  As noted earlier, the
application uses the Apple AVPlayer class for video.  It provides three type
of control windows.  Fixed to the bottom with simple Play/Pause button.
Floating with either fast forward/reverse controls or frame step
forward / reverse.  Fast does not seem to work at 2x speed for some unknown
reason (5x, 10x, 30x, 60x OK).

Player Skips Over OUT/IN.  During playback the player it behaves in the same
way that the BeyonWiz does and skip over the OUT/IN sequences.

Sorting

Fairly self evident set of options.  This controls the order in which the
recordings are presented the recording list.

My personal usage is by date descending, which brings all the new recordings
to the top.

The name, channel, date fields are derived from the file name pattern.  If
the pattern changes the program will break.

20161113-001

